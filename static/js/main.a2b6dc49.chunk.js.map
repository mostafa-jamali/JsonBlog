{"version":3,"sources":["DefaultLayout/Footer.jsx","DefaultLayout/Header.jsx","component/PostCard/PostCard.jsx","views/post-archive/PostArchive.jsx","views/PostSingle/PostSingle.jsx","views/Users/UsersTable.jsx","component/UserHeader/UserHeader.jsx","views/UserSingle/UserPosts/UserPosts.jsx","views/UserSingle/UserTodos/UserTodos.jsx","views/UserSingle/UserSingle.jsx","views/Todos/Todos.jsx","DefaultLayout/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","Header","props","useState","isOpen","setIsOpen","Container","fluid","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","to","NavbarText","PostCard","post","Card","CardHeader","id","title","CardBody","body","CardFooter","userId","PostArchive","isLoading","setIsLoading","posts","setPosts","useEffect","axios","get","then","res","data","Spinner","type","map","Col","key","PostSingle","setPost","comments","setComments","useParams","catch","err","console","warn","Row","comment","xs","name","email","UsersTable","users","setUsers","Table","striped","hover","responsive","user","style","cursor","username","website","UserHeader","UserPosts","userPost","UserTodos","todos","todo","User","setUser","pending","setPending","setUserPost","setTodos","Promise","resolve","reject","log","sm","phone","address","city","street","company","src","exact","path","Todos","index","UserSingle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a2b6dc49.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavbarText, Container\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <Container fluid>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\">My JsonBlog</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                        <Link className='nav-link' to='/users'>users</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link className='nav-link' to='/posts'>post</Link>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <Link className='nav-link' to='/todos'>todos</Link>\r\n                    </NavItem>\r\n                </Nav>\r\n                <NavbarText>Simple Text</NavbarText>\r\n            </Collapse>\r\n        </Navbar>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Card, CardHeader, CardFooter, CardBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PostCard({ post }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <Link to={`/posts/${post.id}`}>{post.title}</Link>\r\n            </CardHeader>\r\n            <CardBody>{post.body}</CardBody>\r\n            <CardFooter>user: {post.userId}</CardFooter>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport PostCard from '../../component/PostCard/PostCard'\r\nimport { Row, Col } from 'reactstrap';\r\nimport { Card, CardHeader, CardBody, Spinner } from 'reactstrap';\r\n\r\nfunction PostArchive() {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const getPosts = () => {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts').then(res => { setPosts(res.data); setIsLoading(false) })\r\n    }\r\n    useEffect(() => { getPosts() }, [])\r\n    return (\r\n        <div className='mt-3'>\r\n            {\r\n                isLoading ?\r\n                    <div>\r\n                        <Spinner type=\"grow\" color=\"primary\" />\r\n                        <Spinner type=\"grow\" color=\"secondary\" />\r\n                        <Spinner type=\"grow\" color=\"success\" />\r\n                        <Spinner type=\"grow\" color=\"danger\" />\r\n                        <Spinner type=\"grow\" color=\"warning\" />\r\n                        <Spinner type=\"grow\" color=\"info\" />\r\n                        <Spinner type=\"grow\" color=\"light\" />\r\n                        <Spinner type=\"grow\" color=\"dark\" />\r\n                    </div>\r\n                    :\r\n                    <Card className=\"mb-3\">\r\n                        <CardHeader>\r\n                            <h3>Posts</h3>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            {\r\n                                posts.map(post => <Col key={post.id} className='mt-3'>\r\n                                    <PostCard post={post} />\r\n                                </Col>)\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostArchive\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Card, CardHeader, CardFooter, CardBody, Row, Col, Spinner } from 'reactstrap';\r\nfunction PostSingle() {\r\n    const [post, setPost] = useState({})\r\n    const [comments, setComments] = useState([])\r\n    const { id } = useParams();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const getData = () => {\r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`).then(res => { setPost(res.data); setIsLoading(false) }).catch(err => console.warn(err))\r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`).then(res => { setComments(res.data); setIsLoading(false) }).catch(err => console.warn(err))\r\n    };\r\n    useEffect(() => { getData() }, []);\r\n    return (\r\n        <div>\r\n            {\r\n                isLoading ?\r\n                    <div>\r\n                        <Spinner type=\"grow\" color=\"primary\" />\r\n                        <Spinner type=\"grow\" color=\"secondary\" />\r\n                        <Spinner type=\"grow\" color=\"success\" />\r\n                        <Spinner type=\"grow\" color=\"danger\" />\r\n                        <Spinner type=\"grow\" color=\"warning\" />\r\n                        <Spinner type=\"grow\" color=\"info\" />\r\n                        <Spinner type=\"grow\" color=\"light\" />\r\n                        <Spinner type=\"grow\" color=\"dark\" />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <Card className=\"my-3\">\r\n                            <CardHeader><h2>{post.title}</h2></CardHeader>\r\n                            <CardBody>\r\n                                <p>\r\n                                    {post.body}\r\n                                </p>\r\n                            </CardBody>\r\n                            <CardFooter>{post.userId}</CardFooter>\r\n                        </Card>\r\n                        <Card className=\"mb-3\">\r\n                            <CardHeader><h2>comments</h2></CardHeader>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    {\r\n                                        comments.map(comment => <Col xs={12} className='border p-3'>\r\n                                            <div>comment by:{comment.name}</div>\r\n                                            <div>email:{comment.email}</div>\r\n                                            <div>{comment.body}</div>\r\n                                        </Col>)\r\n                                    }\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostSingle\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Table, Spinner } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nfunction UsersTable() {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    \r\n    const getUsers = () => {\r\n        axios.get('https://jsonplaceholder.typicode.com/users').then(res => { setUsers(res.data); setIsLoading(false) })\r\n    }\r\n    useEffect(() => getUsers(), []);\r\n    return (\r\n        <div className='mt-4'>\r\n            {isLoading ?\r\n                <div>\r\n                    <Spinner type=\"grow\" color=\"primary\" />\r\n                    <Spinner type=\"grow\" color=\"secondary\" />\r\n                    <Spinner type=\"grow\" color=\"success\" />\r\n                    <Spinner type=\"grow\" color=\"danger\" />\r\n                    <Spinner type=\"grow\" color=\"warning\" />\r\n                    <Spinner type=\"grow\" color=\"info\" />\r\n                    <Spinner type=\"grow\" color=\"light\" />\r\n                    <Spinner type=\"grow\" color=\"dark\" />\r\n                </div>\r\n                :\r\n                <Table striped hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>username</th>\r\n                            <th>name</th>\r\n                            <th>email</th>\r\n                            <th>website</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            users.map(user => <tr key={user.id} style={{ cursor: \"pointer\" }}>\r\n                                <td>{user.id}</td>\r\n                                <td><Link to={`/users/${user.id}`}>{user.username}</Link></td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.website}</td>\r\n                            </tr>)\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersTable\r\n","import React, {useState} from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavbarText\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction UserHeader() {\r\n    const { id } = useParams();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/users\">USERS</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <Link className='nav-link' to={`/users/${id}/userposts`}>UserPosts</Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Link className='nav-link' to={`/users/${id}/usertodos`}>UserTodos</Link>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserHeader\r\n","import React from 'react';\r\nimport { Card, CardHeader, CardFooter, CardBody, Row, Col } from 'reactstrap';\r\n\r\n\r\nfunction UserPosts({ userPost }) {\r\n    \r\n    return (\r\n        <div>\r\n            <Card className=\"mb-3\">\r\n                <CardHeader>\r\n                    <h3>Posts</h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    {userPost.map(post =>\r\n                        <Card key={post.id} className=\"my-3\">\r\n                            <CardHeader><h5>{post.title}</h5><h6><span>Post id : </span>{post.id}</h6></CardHeader>\r\n                            <CardBody>\r\n                                {post.body}\r\n                            </CardBody>\r\n                        </Card>)\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserPosts\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardHeader, CardFooter, CardBody, Row, Col } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction UserTodos({ todos }) {\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"mb-3\">\r\n                <CardHeader>\r\n                    <h3>Todos</h3>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    {todos.map(todo =>\r\n                        <Card key={todo.id} className=\"my-3\">\r\n                            <CardHeader><h6><span>Todo id : </span>{todo.id}</h6></CardHeader>\r\n                            <CardBody>\r\n                                <h5>{todo.title}</h5>\r\n                            </CardBody>\r\n                        </Card>)\r\n                    }\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTodos\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Card, CardHeader, CardFooter, CardBody, Row, Col, Spinner } from 'reactstrap';\r\nimport UserHeader from '../../component/UserHeader/UserHeader'\r\nimport UserPosts from './UserPosts/UserPosts';\r\nimport UserTodos from './UserTodos/UserTodos'\r\n\r\n\r\nfunction User() {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState({});\r\n    const [pending, setPending] = useState(true)\r\n    const [userPost, setUserPost] = useState([]);\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const getUser = () => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get('https://jsonplaceholder.typicode.com/users/' + id).then(res => { setUser(res.data); setPending(false); resolve(res.data) }).catch(err => {\r\n                console.log(err);\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n    const getUserPost = () => {\r\n        axios.get(`https://jsonplaceholder.typicode.com/users/${id}/posts`).then(res => { setUserPost(res.data); });\r\n    }\r\n\r\n    const getUserTodo = () => {\r\n        axios.get(`https://jsonplaceholder.typicode.com/users/${id}/todos`).then(res => { setTodos(res.data); })\r\n    }\r\n    useEffect(() => { getUser().then(getUserPost()).then(getUserTodo()); }, [])\r\n\r\n    return (\r\n        <div>\r\n            {pending ?\r\n                <div>\r\n                    <Spinner type=\"grow\" color=\"primary\" />\r\n                    <Spinner type=\"grow\" color=\"secondary\" />\r\n                    <Spinner type=\"grow\" color=\"success\" />\r\n                    <Spinner type=\"grow\" color=\"danger\" />\r\n                    <Spinner type=\"grow\" color=\"warning\" />\r\n                    <Spinner type=\"grow\" color=\"info\" />\r\n                    <Spinner type=\"grow\" color=\"light\" />\r\n                    <Spinner type=\"grow\" color=\"dark\" />\r\n                </div>\r\n                :\r\n                <Card className=\"my-3\">\r\n\r\n                    <CardHeader>\r\n                        <Row >\r\n                            <Col xs=\"8\" className=\"mr-5\">\r\n                                <h2>{user.username}</h2>\r\n                            </Col>\r\n                            <UserHeader />\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody >\r\n                        <Row>\r\n                            <Col sm='7' className=\"align-self-center\">\r\n                                name: {user.name}<br />\r\n                                email: {user.email}<br />\r\n                                phone: {user.phone}<br />\r\n                                address: {user.address.city} - {user.address.street}<br />\r\n                                company: {user.company.name}\r\n                            </Col>\r\n                            <Col><img className=\"border rounded\" src={`https://picsum.photos/400/150?random=${id}`}></img></Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                    <CardFooter>website: {user.website}</CardFooter>\r\n                </Card>\r\n            }\r\n\r\n            <Switch>\r\n                <Route exact path={`/users/${id}/userposts`}>\r\n                    <UserPosts userPost={userPost} />\r\n                </Route>\r\n                <Route path={`/users/${id}/usertodos`}>\r\n                    <UserTodos todos={todos} />\r\n                </Route>\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardHeader, CardBody, Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Todos() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n\r\n    const getPosts = () => {\r\n        axios.get('https://jsonplaceholder.typicode.com/todos').then(res => {setTodos(res.data); setIsLoading(false)})\r\n    }\r\n    useEffect(() => { getPosts() }, [])\r\n    return (\r\n        <div className='mt-3'>\r\n            {isLoading ?\r\n                <div>\r\n                    <Spinner type=\"grow\" color=\"primary\" />\r\n                    <Spinner type=\"grow\" color=\"secondary\" />\r\n                    <Spinner type=\"grow\" color=\"success\" />\r\n                    <Spinner type=\"grow\" color=\"danger\" />\r\n                    <Spinner type=\"grow\" color=\"warning\" />\r\n                    <Spinner type=\"grow\" color=\"info\" />\r\n                    <Spinner type=\"grow\" color=\"light\" />\r\n                    <Spinner type=\"grow\" color=\"dark\" />\r\n                </div>\r\n                :\r\n                <Card className=\"mb-3\">\r\n                    <CardHeader>\r\n                        <h3>Todos</h3>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        {todos.map(todo =>\r\n                            <Card key={todo.id} className=\"my-3\">\r\n                                <CardHeader><h6><span>Todo id : </span>{todo.id}</h6></CardHeader>\r\n                                <CardBody>\r\n                                    <h5>{todo.title}</h5>\r\n                                </CardBody>\r\n                            </Card>)\r\n                        }\r\n                    </CardBody>\r\n                </Card>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React from 'react'\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport PostArchive from '../views/post-archive/PostArchive';\r\nimport PostSingle from '../views/PostSingle/PostSingle';\r\nimport Users from '../views/Users/UsersTable'\r\nimport UserSingle from '../views/UserSingle/UserSingle';\r\nimport { Container } from 'reactstrap';\r\nimport Todos from '../views/Todos/Todos'\r\nfunction index() {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Container>\r\n                <Switch>\r\n                    <Route path=\"/users/:id\">\r\n                        <UserSingle/>\r\n                    </Route>\r\n                    <Route path=\"/posts/:id\">\r\n                        <PostSingle/>\r\n                    </Route>\r\n                    <Route exact path=\"/posts\">\r\n                        <PostArchive />\r\n                    </Route>\r\n                    <Route exact path=\"/users\">\r\n                        <Users/>\r\n                    </Route>\r\n                    <Route exact path=\"/todos\">\r\n                        <Todos/>\r\n                    </Route>\r\n                </Switch>\r\n            </Container>\r\n            <Footer />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React from 'react';\r\nimport DefaulLayout  from './DefaultLayout'\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <DefaulLayout />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}